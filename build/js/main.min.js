/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const modal = document.querySelector('.modal');\nconst modalLocation = document.querySelector('.modal__location');\nconst closeButton = document.querySelector('.modal__close-btn');\nconst myForm = document.querySelector('.form');\nconst addButton = document.querySelector('.form__button');\nconst messages = document.querySelector('.modal__messages');\nconst [name, place, text] = myForm.elements;\nymaps.ready(init);\n\nfunction init() {\n  const myMap = new ymaps.Map('map', {\n    center: [55.77373784, 37.62174968],\n    zoom: 14,\n    controls: ['geolocationControl', 'zoomControl']\n  });\n  let coordinates;\n  const placemarks = [];\n  const clusterer = new ymaps.Clusterer({\n    preset: 'islands#invertedOrangeClusterIcons',\n    groupByCoordinates: false,\n    clusterDisableClickZoom: true,\n    clusterHideIconOnBalloonOpen: false,\n    geoObjectHideIconOnBalloonOpen: false,\n    clusterOpenBalloonOnClick: true,\n    clusterBalloonContentLayout: 'cluster#balloonCarousel',\n    clusterBalloonPanelMaxMapArea: 0,\n    clusterBalloonContentLayoutWidth: 200,\n    clusterBalloonContentLayoutHeight: 150,\n    clusterBalloonPagerType: 'marker'\n  });\n\n  const showModal = () => {\n    if (!modal.classList.contains('modal__show')) {\n      modal.classList.add('modal__show');\n      modal.style.top = event.clientY + 'px';\n      modal.style.left = event.clientX + 'px';\n    }\n  };\n\n  const hideModal = () => {\n    modal.classList.remove('modal__show');\n  };\n\n  const getCoords = event => {\n    return event.get('coords');\n  };\n\n  const createPlacemark = () => {\n    const date = new Date();\n    const currentTime = date.toLocaleTimeString();\n    const currentDate = date.toLocaleDateString();\n    const newPlacemark = new ymaps.Placemark(coordinates, {\n      balloonContentHeader: place.value,\n      balloonContentBody: `<a class=\"link\">${modalLocation.innerText}</a><br><br>${text.value}<br>`,\n      balloonContentFooter: currentTime + ' ' + currentDate\n    }, {\n      preset: 'islands#orangeIcon',\n      draggable: false,\n      openBalloonOnClick: false\n    });\n    newPlacemark.commentContent = `<div><span><b>${name.value}</b></span>\n            <span>${place.value}</span>\n            <span>${currentTime}</span><br>\n            <span>${text.value}</span></div>`;\n    messages.innerHTML += newPlacemark.commentContent;\n    newPlacemark.place = modalLocation.innerText;\n    return newPlacemark;\n  };\n\n  const clearInputs = () => {\n    name.value = '';\n    place.value = '';\n    text.value = '';\n  };\n\n  const showCurrentModal = () => {\n    messages.innerHTML = '';\n    modalLocation.innerHTML = '';\n    const link = document.querySelector('.link');\n    placemarks.forEach(el => {\n      if (el.place === link.textContent) {\n        modalLocation.innerText = el.place;\n        messages.innerHTML += el.commentContent;\n      }\n    });\n    showModal();\n  };\n\n  document.addEventListener('click', e => {\n    if (e.target.classList.contains('link')) {\n      showCurrentModal();\n    }\n  });\n\n  const getAdress = async coords => {\n    try {\n      const myGeocoder = await ymaps.geocode([coords]);\n      const adress = myGeocoder.geoObjects.get(0);\n      modalLocation.textContent = adress.getAddressLine();\n    } catch (error) {\n      console.log('Произошла ошибка: ' + error);\n    }\n  };\n\n  myMap.events.add('click', e => {\n    if (modal.classList.contains('modal__show')) {\n      hideModal();\n    } else {\n      messages.innerHTML = '';\n      coordinates = getCoords(e);\n      getAdress(coordinates);\n      showModal();\n    }\n  });\n  addButton.addEventListener('click', e => {\n    e.preventDefault();\n\n    if (name.value && place.value && text.value) {\n      const newPlacemark = createPlacemark();\n      myMap.geoObjects.add(newPlacemark);\n      clusterer.add(newPlacemark);\n      placemarks.push(newPlacemark);\n      newPlacemark.events.add('click', () => {\n        showModal();\n        messages.innerHTML = newPlacemark.commentContent;\n        modalLocation.innerText = newPlacemark.place;\n      });\n      clearInputs();\n    } else {\n      alert('Заполните все поля!');\n    }\n  });\n  closeButton.addEventListener('click', () => hideModal());\n  clusterer.add(placemarks);\n  myMap.geoObjects.add(clusterer);\n}\n\n//# sourceURL=webpack:///./src/js/main.js?");

/***/ })

/******/ });